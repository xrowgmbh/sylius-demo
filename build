#!/bin/sh

set -e
set -x

# Create a sylius project. We can consider using -s dev flag to download a dev master Sylius version instead of the latest tagged one.
composer create-project sylius/sylius --repository='{"type":"vcs", "url": "https://github.com/xrowgmbh/Sylius.git"}' ./sylius "dev-php-5-5-9-support" -s dev

mv -f sylius/* .
rm -R sylius

npm install

find {app/{cache,logs},web} -type d -print0 | xargs -0 chmod -R 777

cp app/config/parameters.yml.dist app/config/parameters_sylius.yml

# Setup project parameters
sed -i "s/database_host: 127.0.0.1/database_host: ${DATABASE_SERVER}/g" app/config/parameters_sylius.yml
sed -i "s/database_name: sylius/database_name: ${DATABASE_NAME}/g" app/config/parameters_sylius.yml
sed -i "s/database_user: root/database_user: ${DATABASE_USER}/g" app/config/parameters_sylius.yml
sed -i "s/database_password: ~/database_password: ${DATABASE_PASSWORD}/g" app/config/parameters_sylius.yml

sed -i "s/resource: \"parameters.yml\"/resource: \"parameters_sylius.yml\"/g" app/config/config.yml
sed -i "/^imports:/ a\    - { resource: \"parameters.yml\" }\\" app/config/config.yml

sed -i "s/sylius_backend_dashboard/sylius_admin_dashboard/g" src/Sylius/Bundle/WebBundle/Menu/FrontendMenuBuilder.php

# Delete a DB Schema to ensure if it is empty. With '--no-interaction' flag sylius will try to update a current schema, so it can cause an exception.
# If we don't care about demo database demo it will be just insurance that schema does not exist.
# app/console doctrine:database:drop --env=${SYMFONY_ENV} --force

# Install Sylius
app/console sylius:install --env=${SYMFONY_ENV} --no-interaction

# Loads some demo data
app/console doctrine:fixtures:load --env=${SYMFONY_ENV} --no-interaction

# In addition to these folders, we should also ensure, that: assets, bundles, css, js and media folders inside a web folder will have a proper access rights
find {app/{cache,logs},web} -type d -print0 | xargs -0 chmod -R 777

./node_modules/.bin/gulp
